{"version":3,"file":"static/js/637.b151e4f4.chunk.js","mappings":"+MAGe,SAASA,IAOf,IAADC,EAAAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,CAAC,EAACG,EAAAJ,EANJK,cAAAA,OAAa,IAAAD,GAAOA,EAAAE,EAAAN,EACpBO,UAAAA,OAAS,IAAAD,EAAG,GAAEA,EAAAE,EAAAR,EACdS,QAAAA,OAAO,IAAAD,EAAG,MAAKA,EAAAE,EAAAV,EACfW,QAAAA,OAAO,IAAAD,EAAG,MAAKA,EAAAE,EAAAZ,EACfa,KAAAA,OAAI,IAAAD,EAAG,OAAMA,EAAAE,EAAAd,EACbe,YAAAA,OAAW,IAAAD,EAAG,2BAA0BA,EAElCE,GAAiBC,EAAAA,EAAAA,UACjBC,GAAmBD,EAAAA,EAAAA,UACzBE,GAA0CC,EAAAA,EAAAA,UAASb,GAAUc,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtDI,EAAaF,EAAA,GAAEG,EAAgBH,EAAA,GAStC,OACEI,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACGtB,IACCoB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,gBAAeF,SAAC,4BAC/BC,EAAAA,EAAAA,KAAA,SACEE,GAAG,gBACHC,KAAM,SACNC,IAAK,IACLC,SAhBV,SAAsBC,GAChBA,EAAMC,OAAOC,MAAQ,IACvBC,MAAM,mDAC0B,KAAvBH,EAAMC,OAAOC,MACtBZ,EAAiB,IACZA,EAAiBU,EAAMC,OAAOC,MACvC,EAWUA,MAAOb,QAKbK,EAAAA,EAAAA,KAAA,OAAKU,UAAU,eAAcX,UAC3BC,EAAAA,EAAAA,KAAA,OACEE,GAAG,cACHS,IAAKvB,EACLwB,MAAO,CACLC,UAAU,GAADC,OAAKjC,EAAO,KAAAiC,OAAI/B,EAAO,KAAA+B,OAAI7B,EAAI,KAAA6B,OAAI3B,GAC5C4B,MAAO,MACPhB,UAEDiB,EAAAA,EAAAA,SAAa,CACZrB,cAAAA,EACAP,eAAAA,EACA6B,aAnCS,EAoCT3B,iBAAAA,SAINU,EAAAA,EAAAA,KAAA,QAAMW,IAAKrB,EAAiBS,SAAC,SAGnC,C,uBCzDe,SAASiB,IAMf,IACHE,EADE9C,EAAAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,CAAC,EAAC8C,EAAA/C,EALJgD,aAAAA,OAAY,IAAAD,EAAG,GAAEA,EAAAE,EAAAjD,EACjBuB,cAAAA,OAAa,IAAA0B,EAAG,IAAGA,EACnBJ,EAAY7C,EAAZ6C,aACA7B,EAAchB,EAAdgB,eACAE,EAAgBlB,EAAhBkB,iBAiBA4B,EAAWI,aAbX,WACML,GAAgBtB,EAClB4B,cAAcL,QAGc3C,GAA1Ba,EAAeoC,cACajD,GAA5Be,EAAiBkC,UAEjBpC,EAAeoC,QAAQZ,MAAMG,MAAK,GAAAD,SAAQG,EAAY,KACtD3B,EAAiBkC,QAAQC,UAAS,GAAAX,OAAMG,EAAY,KAG1D,GAC6BG,EAC/B,C,0ECtBA,WAAiB,C","sources":["components/Doc/practices/ProgressBar/index.js","components/Doc/practices/ProgressBar/showProgress.js","webpack://sample/./src/components/Doc/practices/ProgressBar/progressBarStyle.css?0429"],"sourcesContent":["import { useRef, useState } from \"react\";\r\nimport showProgress from \"./showProgress\";\r\nimport \"./progressBarStyle.css\";\r\nexport default function ProgressBar({\r\n  inputRequired = true,\r\n  progValue = 80,\r\n  hShadow = \"0px\",\r\n  vShadow = \"4px\",\r\n  blur = \"10px\",\r\n  shadowColor = \"rgba(255, 204, 72, 0.53)\",\r\n} = {}) {\r\n  const progressBarRef = useRef();\r\n  const progressValueRef = useRef();\r\n  const [progressValue, setProgressValue] = useState(progValue);\r\n  let currProgress = 0;\r\n  function handleChange(event) {\r\n    if (event.target.value > 100) {\r\n      alert(\"Input value should be less than or equal to 100\");\r\n    } else if (event.target.value === \"\") {\r\n      setProgressValue(80);\r\n    } else setProgressValue(event.target.value);\r\n  }\r\n  return (\r\n    <>\r\n      {inputRequired && (\r\n        <>\r\n          <label htmlFor=\"progressValue\">Enter Progress Value: </label>\r\n          <input\r\n            id=\"progressValue\"\r\n            type={\"number\"}\r\n            max={100}\r\n            onChange={handleChange}\r\n            value={progressValue}\r\n          />\r\n        </>\r\n      )}\r\n\r\n      <div className=\"progressCont\">\r\n        <div\r\n          id=\"progressBar\"\r\n          ref={progressBarRef}\r\n          style={{\r\n            boxShadow: `${hShadow} ${vShadow} ${blur} ${shadowColor}`,\r\n            width: \"0%\",\r\n          }}\r\n        >\r\n          {showProgress({\r\n            progressValue,\r\n            progressBarRef,\r\n            currProgress,\r\n            progressValueRef,\r\n          })}\r\n        </div>\r\n      </div>\r\n      <span ref={progressValueRef}>0%</span>\r\n    </>\r\n  );\r\n}\r\n","export default function showProgress({\r\n  timeInterval = 10,\r\n  progressValue = 100,\r\n  currProgress,\r\n  progressBarRef,\r\n  progressValueRef,\r\n} = {}) {\r\n  let interval;\r\n\r\n  function init() {\r\n    if (currProgress >= progressValue) {\r\n      clearInterval(interval);\r\n    } else {\r\n      if (\r\n        progressBarRef.current != undefined &&\r\n        progressValueRef.current != undefined\r\n      ) {\r\n        progressBarRef.current.style.width = `${++currProgress}%`;\r\n        progressValueRef.current.innerText = `${currProgress}%`;\r\n      }\r\n    }\r\n  }\r\n  interval = setInterval(init, timeInterval);\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["ProgressBar","_ref","arguments","length","undefined","_ref$inputRequired","inputRequired","_ref$progValue","progValue","_ref$hShadow","hShadow","_ref$vShadow","vShadow","_ref$blur","blur","_ref$shadowColor","shadowColor","progressBarRef","useRef","progressValueRef","_useState","useState","_useState2","_slicedToArray","progressValue","setProgressValue","_jsxs","_Fragment","children","_jsx","htmlFor","id","type","max","onChange","event","target","value","alert","className","ref","style","boxShadow","concat","width","showProgress","currProgress","interval","_ref$timeInterval","timeInterval","_ref$progressValue","setInterval","clearInterval","current","innerText"],"sourceRoot":""}