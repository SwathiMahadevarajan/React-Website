{"version":3,"file":"static/js/1191.17ea36c8.chunk.js","mappings":"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","sources":["components/Doc/practices/CustomerReview/ProgressBarPair.js","api/customers/index.js","components/Doc/practices/CustomerReview/index.js","api/customers/useGetCustomerSummary.js","api/customers/useGetCustomerRating.js","api/customers/useUpdateCustomerSummary.js","api/customers/useUpdateCustomerRating.js","components/Doc/practices/ProgressBar/index.js","components/Doc/practices/ProgressBar/showProgress.js","assets/icons/starsvg.js","components/Doc/practices/StarRatingCard/Star.js","components/Doc/practices/StarRatingCard/index.js","webpack://sample/./src/components/Doc/practices/CustomerReview/customerReviewStyle.css?f3c8","webpack://sample/./src/components/Doc/practices/ProgressBar/progressBarStyle.css?0429","webpack://sample/./src/components/Doc/practices/StarRatingCard/starRatingStyle.css?ad22"],"sourcesContent":["import ProgressBar from \"../ProgressBar\";\r\n\r\nexport default function ProgressBarPair({ starIndex = 1, progressValue = 35 }) {\r\n  return (\r\n    <div className=\" progressBarPair\">\r\n      <span className=\"starName\">{starIndex} star</span>\r\n      <ProgressBar inputRequired={false} progValue={progressValue} />\r\n    </div>\r\n  );\r\n}\r\n","export const baseURL = \"http://localhost:3000\";\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport StarRating from \"../StarRatingCard\";\r\nimport ProgressBarPair from \"./ProgressBarPair\";\r\nimport useGetCustomerSummary from \"api/customers/useGetCustomerSummary\";\r\nimport useGetCustomerRating from \"api/customers/useGetCustomerRating\";\r\nimport \"./customerReviewStyle.css\";\r\nimport useUpdateCustomerSummary from \"api/customers/useUpdateCustomerSummary\";\r\nimport useUpdateCustomerRating from \"api/customers/useUpdateCustomerRating\";\r\n\r\nexport default function CustomerReview({ starCount = 5 } = {}) {\r\n  let starArray = [];\r\n  let clickCount = 0;\r\n  let progressValue = Array(starCount).fill(0);\r\n\r\n  const starRef = useRef();\r\n  const customerSummary = useGetCustomerSummary();\r\n  const customerRating = useGetCustomerRating();\r\n  const setCustomerSummary = useUpdateCustomerSummary();\r\n  const setCustomerRating = useUpdateCustomerRating();\r\n  let custSummary = [];\r\n\r\n  const updateProgressValue = () => {\r\n    let countArray = [0, 0, 0, 0, 0];\r\n    custSummary = [];\r\n\r\n    starArray.forEach((element) => {\r\n      let starIndex = Number(element.starRating) - 1;\r\n      countArray[starIndex] += 1;\r\n    });\r\n\r\n    countArray.forEach((clickCounter, i) => {\r\n      progressValue[i] = Math.round((clickCounter / clickCount) * 100);\r\n      custSummary.push({\r\n        id: i,\r\n        starIndex: i,\r\n        clickCount: clickCounter,\r\n        clickPercent: progressValue[i],\r\n      });\r\n    });\r\n    setCustomerSummary.action({ payload: custSummary });\r\n  };\r\n\r\n  const handleStarClick = (starClicked) => {\r\n    let clickObject = { starRating: starClicked + 1, createdAt: new Date() };\r\n    clickCount++;\r\n    starArray = starArray.concat(clickObject);\r\n    starRef.current.className.concat(\"disabled\");\r\n    setCustomerRating.action({ payload: clickObject });\r\n    updateProgressValue();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (customerSummary.data && customerRating.data) {\r\n      custSummary = customerSummary.data;\r\n      for (let i = 0; i < Object.keys(custSummary).length - 1; i++) {\r\n        progressValue[i] = custSummary[i].clickPercent;\r\n      }\r\n      starArray = customerRating.data;\r\n      clickCount = customerRating.data.length;\r\n    }\r\n  }, [customerSummary.data, customerRating.data]);\r\n\r\n  useEffect(() => {\r\n    customerRating.action();\r\n    customerSummary.action();\r\n  }, [setCustomerSummary.loading, setCustomerRating.loading]);\r\n\r\n  return (\r\n    <div className=\"customerReview\">\r\n      <StarRating\r\n        starCount={starCount}\r\n        setClickObject={handleStarClick}\r\n        starRef={starRef}\r\n      />\r\n      <p id=\"customerCount\">\r\n        {customerRating.data ? customerRating.data.length : clickCount} customer\r\n        ratings\r\n      </p>\r\n      <div className=\"progressRateCont\">\r\n        {customerSummary.data && !customerSummary.loading\r\n          ? progressValue.map((_, index) => {\r\n              let progressValue = customerSummary.data[index].clickPercent;\r\n              return (\r\n                <ProgressBarPair\r\n                  starIndex={index + 1}\r\n                  progressValue={progressValue}\r\n                />\r\n              );\r\n            })\r\n          : \"\"}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import useApi from \"api/client/useApi\";\r\nimport { baseURL } from \".\";\r\nexport default function useGetCustomerSummary() {\r\n  return useApi({\r\n    baseURL,\r\n    endpoint: \"/customerSummary/0\",\r\n    options: { method: \"get\" },\r\n  });\r\n}\r\n","import useApi from \"api/client/useApi\";\r\nimport { baseURL } from \".\";\r\n\r\nexport default function useGetCustomerRating() {\r\n  return useApi({\r\n    baseURL,\r\n    endpoint: \"/customerRating\",\r\n    options: { method: \"get\" },\r\n  });\r\n}\r\n","import useApi from \"api/client/useApi\";\r\nimport { baseURL } from \".\";\r\nexport default function useUpdateCustSummary() {\r\n  let options = {};\r\n  //   options.payload = { summary: summary };\r\n  options.method = \"put\";\r\n  return useApi({ baseURL, endpoint: \"/customerSummary/0\", options });\r\n}\r\n","import useApi from \"api/client/useApi\";\r\nimport { baseURL } from \".\";\r\nexport default function useUpdateCustRating() {\r\n  let options = {};\r\n  options.method = \"post\";\r\n  return useApi({ baseURL, endpoint: \"/customerRating\", options });\r\n}\r\n","import { useRef, useState } from \"react\";\r\nimport showProgress from \"./showProgress\";\r\nimport \"./progressBarStyle.css\";\r\nexport default function ProgressBar({\r\n  inputRequired = true,\r\n  progValue = 80,\r\n  hShadow = \"0px\",\r\n  vShadow = \"4px\",\r\n  blur = \"10px\",\r\n  shadowColor = \"rgba(255, 204, 72, 0.53)\",\r\n} = {}) {\r\n  const progressBarRef = useRef();\r\n  const progressValueRef = useRef();\r\n  const [progressValue, setProgressValue] = useState(progValue);\r\n  let currProgress = 0;\r\n  function handleChange(event) {\r\n    if (event.target.value > 100) {\r\n      alert(\"Input value should be less than or equal to 100\");\r\n    } else if (event.target.value === \"\") {\r\n      setProgressValue(80);\r\n    } else setProgressValue(event.target.value);\r\n  }\r\n  return (\r\n    <>\r\n      {inputRequired && (\r\n        <>\r\n          <label htmlFor=\"progressValue\">Enter Progress Value: </label>\r\n          <input\r\n            id=\"progressValue\"\r\n            type={\"number\"}\r\n            max={100}\r\n            onChange={handleChange}\r\n            value={progressValue}\r\n          />\r\n        </>\r\n      )}\r\n\r\n      <div className=\"progressCont\">\r\n        <div\r\n          id=\"progressBar\"\r\n          ref={progressBarRef}\r\n          style={{\r\n            boxShadow: `${hShadow} ${vShadow} ${blur} ${shadowColor}`,\r\n            width: \"0%\",\r\n          }}\r\n        >\r\n          {showProgress({\r\n            progressValue,\r\n            progressBarRef,\r\n            currProgress,\r\n            progressValueRef,\r\n          })}\r\n        </div>\r\n      </div>\r\n      <span ref={progressValueRef}>0%</span>\r\n    </>\r\n  );\r\n}\r\n","export default function showProgress({\r\n  timeInterval = 10,\r\n  progressValue = 100,\r\n  currProgress,\r\n  progressBarRef,\r\n  progressValueRef,\r\n} = {}) {\r\n  let interval;\r\n\r\n  function init() {\r\n    if (currProgress >= progressValue) {\r\n      clearInterval(interval);\r\n    } else {\r\n      if (\r\n        progressBarRef.current != undefined &&\r\n        progressValueRef.current != undefined\r\n      ) {\r\n        progressBarRef.current.style.width = `${++currProgress}%`;\r\n        progressValueRef.current.innerText = `${currProgress}%`;\r\n      }\r\n    }\r\n  }\r\n  interval = setInterval(init, timeInterval);\r\n}\r\n","export default function StarSvg({ className }) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"33\"\r\n      height=\"30\"\r\n      className=\"star\"\r\n      fill=\"none\"\r\n      viewBox=\"0 0 33 30\"\r\n    >\r\n      <path\r\n        d=\"M16.5 0L21.3489 9.82606L32.1924 11.4012L24.3457 19.0492L26.1985 29.8488L16.5 24.7494L6.80154 29.8488L8.65432 19.0492L0.807568 11.4012L11.6511 9.82606L16.5 0Z\"\r\n        fill=\"black\"\r\n        fillOpacity=\"0.08\"\r\n        className={className}\r\n      ></path>\r\n    </svg>\r\n  );\r\n}\r\n","import StarSvg from \"assets/icons/starsvg.js\";\r\nexport default function Star({\r\n  height = 30,\r\n  width = 33,\r\n  svgns = \"http://www.w3.org/2000/svg\",\r\n  active,\r\n  index,\r\n} = {}) {\r\n  return (\r\n    <button key={index} data-star-index={index} className={\"starsvg \"}>\r\n      <StarSvg className={active ? \"highlighted\" : \" \"} />\r\n    </button>\r\n  );\r\n}\r\n","import { useRef, useState } from \"react\";\r\nimport Star from \"./Star\";\r\nimport \"./starRatingStyle.css\";\r\nexport default function StarRating({ starCount = 5, setClickObject, starRef }) {\r\n  const [clickedIndex, setClickedIndex] = useState(-1);\r\n  const [activeIndex, setActiveIndex] = useState(-1);\r\n  const ratingValueRef = useRef();\r\n\r\n  const handleClick = (event) => {\r\n    let index;\r\n    if (event.target.parentElement.getAttribute(\"class\") === \"star\") {\r\n      index = Number(\r\n        event.target.parentElement.parentElement.dataset.starIndex\r\n      );\r\n      setActiveIndex(index);\r\n      setClickedIndex(index);\r\n      setClickObject(index);\r\n    }\r\n  };\r\n\r\n  const handleMouseOut = (event) => {\r\n    if (event.target.parentElement.getAttribute(\"class\") === \"star\") {\r\n      setActiveIndex(clickedIndex);\r\n      ratingValueRef.current.style.opacity = `100%`;\r\n    }\r\n  };\r\n\r\n  const handleMouseOver = (event) => {\r\n    let index;\r\n    if (event.target.parentElement.getAttribute(\"class\") === \"star\") {\r\n      index = Number(\r\n        event.target.parentElement.parentElement.dataset.starIndex\r\n      );\r\n      setActiveIndex(index);\r\n      ratingValueRef.current.style.opacity = `60%`;\r\n    }\r\n  };\r\n\r\n  const stars = Array(starCount).fill(0);\r\n\r\n  return (\r\n    <div className=\"rating\" ref={starRef}>\r\n      <div\r\n        className=\"stars\"\r\n        onClick={handleClick}\r\n        onMouseOut={handleMouseOut}\r\n        onMouseOver={handleMouseOver}\r\n      >\r\n        {stars.map((star, index) => {\r\n          return <Star active={activeIndex >= index} index={index} />;\r\n        })}\r\n      </div>\r\n\r\n      <p>\r\n        <span ref={ratingValueRef}>{activeIndex + 1}</span> out of{\" \"}\r\n        <span>{starCount}</span>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["ProgressBarPair","_ref","_ref$starIndex","starIndex","_ref$progressValue","progressValue","_jsxs","className","children","_jsx","ProgressBar","inputRequired","progValue","baseURL","CustomerReview","_ref$starCount","arguments","length","undefined","starCount","starArray","clickCount","Array","fill","starRef","useRef","customerSummary","useApi","endpoint","options","method","customerRating","setCustomerSummary","useUpdateCustomerSummary","setCustomerRating","useUpdateCustomerRating","custSummary","useEffect","data","i","Object","keys","clickPercent","action","loading","StarRating","setClickObject","starClicked","clickObject","starRating","createdAt","Date","concat","current","payload","countArray","forEach","element","Number","clickCounter","Math","round","push","id","updateProgressValue","map","_","index","_ref$inputRequired","_ref$progValue","_ref$hShadow","hShadow","_ref$vShadow","vShadow","_ref$blur","blur","_ref$shadowColor","shadowColor","progressBarRef","progressValueRef","_useState","useState","_useState2","_slicedToArray","setProgressValue","_Fragment","htmlFor","type","max","onChange","event","target","value","alert","ref","style","boxShadow","width","showProgress","currProgress","interval","_ref$timeInterval","timeInterval","setInterval","clearInterval","innerText","StarSvg","xmlns","height","viewBox","d","fillOpacity","Star","active","svgns","clickedIndex","setClickedIndex","_useState3","_useState4","activeIndex","setActiveIndex","ratingValueRef","stars","onClick","parentElement","getAttribute","dataset","onMouseOut","opacity","onMouseOver","star"],"sourceRoot":""}