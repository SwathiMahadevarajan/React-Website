{"version":3,"file":"static/js/450.813fb9e2.chunk.js","mappings":"qLAEe,SAASA,EAAeC,GAAyC,IAADC,EAAAD,EAArCE,UAAAA,OAAS,IAAAD,EAAG,EAACA,EAAAE,EAAAH,EAAEI,cAAAA,OAAa,IAAAD,EAAG,GAAEA,EACzE,OACEE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC/BF,EAAAA,EAAAA,MAAA,QAAMC,UAAU,WAAUC,SAAA,CAAEL,EAAU,YACtCM,EAAAA,EAAAA,KAACC,EAAAA,QAAW,CAACC,eAAe,EAAOC,UAAWP,MAGpD,C,uHCNe,SAASK,IAOf,IAADT,EAAAY,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,CAAC,EAACG,EAAAf,EANJU,cAAAA,OAAa,IAAAK,GAAOA,EAAAC,EAAAhB,EACpBW,UAAAA,OAAS,IAAAK,EAAG,GAAEA,EAAAC,EAAAjB,EACdkB,QAAAA,OAAO,IAAAD,EAAG,MAAKA,EAAAE,EAAAnB,EACfoB,QAAAA,OAAO,IAAAD,EAAG,MAAKA,EAAAE,EAAArB,EACfsB,KAAAA,OAAI,IAAAD,EAAG,OAAMA,EAAAE,EAAAvB,EACbwB,YAAAA,OAAW,IAAAD,EAAG,2BAA0BA,EAElCE,GAAiBC,EAAAA,EAAAA,UACjBC,GAAmBD,EAAAA,EAAAA,UACzBE,GAA0CC,EAAAA,EAAAA,UAASlB,GAAUmB,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtDxB,EAAa0B,EAAA,GAAEE,EAAgBF,EAAA,GAStC,OACEzB,EAAAA,EAAAA,MAAA4B,EAAAA,SAAA,CAAA1B,SAAA,CACGG,IACCL,EAAAA,EAAAA,MAAA4B,EAAAA,SAAA,CAAA1B,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAO0B,QAAQ,gBAAe3B,SAAC,4BAC/BC,EAAAA,EAAAA,KAAA,SACE2B,GAAG,gBACHC,KAAM,SACNC,IAAK,IACLC,SAhBV,SAAsBC,GAChBA,EAAMC,OAAOC,MAAQ,IACvBC,MAAM,mDAC0B,KAAvBH,EAAMC,OAAOC,MACtBT,EAAiB,IACZA,EAAiBO,EAAMC,OAAOC,MACvC,EAWUA,MAAOrC,QAKbI,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAcC,UAC3BC,EAAAA,EAAAA,KAAA,OACE2B,GAAG,cACHQ,IAAKlB,EACLmB,MAAO,CACLC,UAAU,GAADC,OAAK5B,EAAO,KAAA4B,OAAI1B,EAAO,KAAA0B,OAAIxB,EAAI,KAAAwB,OAAItB,GAC5CuB,MAAO,MACPxC,UAEDyC,EAAAA,EAAAA,SAAa,CACZ5C,cAAAA,EACAqB,eAAAA,EACAwB,aAnCS,EAoCTtB,iBAAAA,SAINnB,EAAAA,EAAAA,KAAA,QAAMmC,IAAKhB,EAAiBpB,SAAC,SAGnC,C,uBCzDe,SAASyC,IAMf,IACHE,EADElD,EAAAY,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,CAAC,EAACuC,EAAAnD,EALJoD,aAAAA,OAAY,IAAAD,EAAG,GAAEA,EAAAhD,EAAAH,EACjBI,cAAAA,OAAa,IAAAD,EAAG,IAAGA,EACnB8C,EAAYjD,EAAZiD,aACAxB,EAAczB,EAAdyB,eACAE,EAAgB3B,EAAhB2B,iBAiBAuB,EAAWG,aAbX,WACMJ,GAAgB7C,EAClBkD,cAAcJ,QAGcpC,GAA1BW,EAAe8B,cACazC,GAA5Ba,EAAiB4B,UAEjB9B,EAAe8B,QAAQX,MAAMG,MAAK,GAAAD,SAAQG,EAAY,KACtDtB,EAAiB4B,QAAQC,UAAS,GAAAV,OAAMG,EAAY,KAG1D,GAC6BG,EAC/B,C,0ECtBA,WAAiB,C","sources":["components/Doc/practices/CustomerReview/ProgressBarPair.js","components/Doc/practices/ProgressBar/index.js","components/Doc/practices/ProgressBar/showProgress.js","webpack://sample/./src/components/Doc/practices/ProgressBar/progressBarStyle.css?0429"],"sourcesContent":["import ProgressBar from \"../ProgressBar\";\r\n\r\nexport default function ProgressBarPair({ starIndex = 1, progressValue = 35 }) {\r\n  return (\r\n    <div className=\" progressBarPair\">\r\n      <span className=\"starName\">{starIndex} star</span>\r\n      <ProgressBar inputRequired={false} progValue={progressValue} />\r\n    </div>\r\n  );\r\n}\r\n","import { useRef, useState } from \"react\";\r\nimport showProgress from \"./showProgress\";\r\nimport \"./progressBarStyle.css\";\r\nexport default function ProgressBar({\r\n  inputRequired = true,\r\n  progValue = 80,\r\n  hShadow = \"0px\",\r\n  vShadow = \"4px\",\r\n  blur = \"10px\",\r\n  shadowColor = \"rgba(255, 204, 72, 0.53)\",\r\n} = {}) {\r\n  const progressBarRef = useRef();\r\n  const progressValueRef = useRef();\r\n  const [progressValue, setProgressValue] = useState(progValue);\r\n  let currProgress = 0;\r\n  function handleChange(event) {\r\n    if (event.target.value > 100) {\r\n      alert(\"Input value should be less than or equal to 100\");\r\n    } else if (event.target.value === \"\") {\r\n      setProgressValue(80);\r\n    } else setProgressValue(event.target.value);\r\n  }\r\n  return (\r\n    <>\r\n      {inputRequired && (\r\n        <>\r\n          <label htmlFor=\"progressValue\">Enter Progress Value: </label>\r\n          <input\r\n            id=\"progressValue\"\r\n            type={\"number\"}\r\n            max={100}\r\n            onChange={handleChange}\r\n            value={progressValue}\r\n          />\r\n        </>\r\n      )}\r\n\r\n      <div className=\"progressCont\">\r\n        <div\r\n          id=\"progressBar\"\r\n          ref={progressBarRef}\r\n          style={{\r\n            boxShadow: `${hShadow} ${vShadow} ${blur} ${shadowColor}`,\r\n            width: \"0%\",\r\n          }}\r\n        >\r\n          {showProgress({\r\n            progressValue,\r\n            progressBarRef,\r\n            currProgress,\r\n            progressValueRef,\r\n          })}\r\n        </div>\r\n      </div>\r\n      <span ref={progressValueRef}>0%</span>\r\n    </>\r\n  );\r\n}\r\n","export default function showProgress({\r\n  timeInterval = 10,\r\n  progressValue = 100,\r\n  currProgress,\r\n  progressBarRef,\r\n  progressValueRef,\r\n} = {}) {\r\n  let interval;\r\n\r\n  function init() {\r\n    if (currProgress >= progressValue) {\r\n      clearInterval(interval);\r\n    } else {\r\n      if (\r\n        progressBarRef.current != undefined &&\r\n        progressValueRef.current != undefined\r\n      ) {\r\n        progressBarRef.current.style.width = `${++currProgress}%`;\r\n        progressValueRef.current.innerText = `${currProgress}%`;\r\n      }\r\n    }\r\n  }\r\n  interval = setInterval(init, timeInterval);\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["ProgressBarPair","_ref","_ref$starIndex","starIndex","_ref$progressValue","progressValue","_jsxs","className","children","_jsx","ProgressBar","inputRequired","progValue","arguments","length","undefined","_ref$inputRequired","_ref$progValue","_ref$hShadow","hShadow","_ref$vShadow","vShadow","_ref$blur","blur","_ref$shadowColor","shadowColor","progressBarRef","useRef","progressValueRef","_useState","useState","_useState2","_slicedToArray","setProgressValue","_Fragment","htmlFor","id","type","max","onChange","event","target","value","alert","ref","style","boxShadow","concat","width","showProgress","currProgress","interval","_ref$timeInterval","timeInterval","setInterval","clearInterval","current","innerText"],"sourceRoot":""}