{"version":3,"file":"static/js/7453.8bf34899.chunk.js","mappings":"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","sources":["components/Base/Modal/Modal.js","components/Doc/practices/RockPaperScissor/GameBoard.js","components/Doc/practices/RockPaperScissor/Scoreboard.js","components/Doc/practices/RockPaperScissor/WinnerBoard.js","components/Doc/practices/RockPaperScissor/index.js","components/Doc/practices/RockPaperScissor/useGetScore.js","webpack://sample/./src/components/Doc/practices/RockPaperScissor/styles.css?bbcb","webpack://sample/./src/components/Doc/practices/RockPaperScissor/winnerBoardStyles.css?a665"],"sourcesContent":["import \"./style.css\";\r\nconst Modal = ({ children, show, onClose, ...rest }) => {\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"modal-content\">\r\n        <button className=\"close\" onClick={onClose}>\r\n          &times;\r\n        </button>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Modal;\r\n","import { useState } from \"react\";\r\nimport { gameElements } from \"./data\";\r\nimport { GameElement } from \"components\";\r\nimport { WinnersBoard } from \"./WinnerBoard\";\r\nimport { Modal } from \"components/Base/Modal\";\r\nimport { RockPaperScissorRules } from \"assets\";\r\n\r\nconst decideWinner = (userChoice, setWinner, score, setScore) => {\r\n  const computerChoice = Math.floor(Math.random() * 3);\r\n  const userChoiceIndex = gameElements.findIndex(\r\n    (element) => element.name === userChoice.name\r\n  );\r\n  const winner = {\r\n    user: userChoice,\r\n    computer: gameElements[computerChoice],\r\n    userWon: null,\r\n  };\r\n  const computerChoiceIndex = gameElements.findIndex(\r\n    (element) => element.name === gameElements[computerChoice].name\r\n  );\r\n  if (userChoiceIndex === computerChoiceIndex) {\r\n    winner.userWon = null;\r\n  } else if (\r\n    (userChoiceIndex === 0 && computerChoiceIndex === 2) ||\r\n    (userChoiceIndex === 1 && computerChoiceIndex === 0) ||\r\n    (userChoiceIndex === 2 && computerChoiceIndex === 1)\r\n  ) {\r\n    winner.userWon = true;\r\n  } else {\r\n    winner.userWon = false;\r\n  }\r\n  setWinner(winner);\r\n  winner.userWon && setScore(score + 1);\r\n};\r\n\r\nexport const GameBoard = ({ score, setScore }) => {\r\n  const [isPlaying, setIsPlaying] = useState(true);\r\n  const [winner, setWinner] = useState({\r\n    user: null,\r\n    computer: null,\r\n    userWon: null,\r\n  });\r\n  const [showModal, setShowModal] = useState(false);\r\n  return (\r\n    <div className=\"gameBoard\">\r\n      {isPlaying ? (\r\n        <div className=\"gameElements\">\r\n          {gameElements.map((element, index) => (\r\n            <GameElement\r\n              {...element}\r\n              clickable={isPlaying}\r\n              index={index}\r\n              setIsPlaying={setIsPlaying}\r\n              onClick={(userChoice) => {\r\n                decideWinner(userChoice, setWinner, score, setScore);\r\n                setIsPlaying(false);\r\n              }}\r\n            />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <WinnersBoard {...winner} setIsPlaying={setIsPlaying} />\r\n      )}\r\n      {showModal && (\r\n        <Modal show={showModal} onClose={() => setShowModal(false)}>\r\n          <RockPaperScissorRules height=\"300px\" width=\"50px\" />\r\n        </Modal>\r\n      )}\r\n      <button onClick={() => setShowModal(true)}>Rules</button>\r\n    </div>\r\n  );\r\n};\r\n","export const Scoreboard = ({ score = 0 }) => {\r\n  return (\r\n    <div className=\"scoreBoard\">\r\n      <div className=\"title\">\r\n        ROCK\r\n        <br />\r\n        PAPER\r\n        <br />\r\n        SCISSORS\r\n      </div>\r\n      <div className=\"scoreCard\">\r\n        <span>SCORE</span>\r\n        <span className=\"score\">{score}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { GameElement } from \"components/Base\";\r\nimport \"./winnerBoardStyles.css\";\r\nexport const WinnersBoard = (props) => {\r\n  const { user, computer, userWon, setIsPlaying } = props;\r\n  return (\r\n    <div className=\"winnersboard\">\r\n      <div className={`choice ${userWon && \"spotlight\"}`}>\r\n        You Picked\r\n        <GameElement {...user} clickable={false} />\r\n      </div>\r\n      <div className=\"winnerDeclaration\">\r\n        <span>\r\n          {userWon === null ? \"It's a tie\" : userWon ? \"You Won\" : \"You Lost\"}\r\n        </span>\r\n        <button className=\"playAgainButton\" onClick={() => setIsPlaying(true)}>\r\n          Play Again\r\n        </button>\r\n      </div>\r\n      <div className={`choice ${userWon === false && \"spotlight\"}`}>\r\n        Computer Picked\r\n        <GameElement {...computer} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { GameBoard } from \"./GameBoard\";\r\nimport { Scoreboard } from \"./Scoreboard\";\r\nimport \"./styles.css\";\r\nimport { useGetScore } from \"./useGetScore\";\r\nconst RockPaperScissor = () => {\r\n  const [score, setScore] = useGetScore();\r\n  return (\r\n    <div className=\"rock-paper-scissor-game\">\r\n      <Scoreboard score={score} />\r\n      <GameBoard score={score} setScore={setScore} />\r\n    </div>\r\n  );\r\n};\r\nexport default RockPaperScissor;\r\n","import { useState } from \"react\";\r\n\r\nexport const useGetScore = () => {\r\n  const storedScore = JSON.parse(localStorage.getItem(\"score\"));\r\n  const [score, setScore] = useState(storedScore || 0);\r\n  if (!storedScore) localStorage.setItem(\"score\", \"0\");\r\n  const setScoreLocally = (score) => {\r\n    setScore(score);\r\n    localStorage.setItem(\"score\", JSON.stringify(score));\r\n  };\r\n  const resetScore = () => {\r\n    setScore(0);\r\n    localStorage.setItem(\"score\", \"0\");\r\n  };\r\n  return [score, setScoreLocally, resetScore];\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["_ref","children","onClose","show","_objectWithoutProperties","_excluded","_jsx","className","_jsxs","onClick","GameBoard","score","setScore","_useState","useState","_useState2","_slicedToArray","isPlaying","setIsPlaying","_useState3","user","computer","userWon","_useState4","winner","setWinner","_useState5","_useState6","showModal","setShowModal","gameElements","element","index","GameElement","_objectSpread","clickable","userChoice","computerChoice","Math","floor","random","userChoiceIndex","name","computerChoiceIndex","decideWinner","WinnersBoard","Modal","RockPaperScissorRules","height","width","Scoreboard","_ref$score","props","concat","_useGetScore","useGetScore","_useGetScore2","storedScore","JSON","parse","localStorage","getItem","setItem","stringify"],"sourceRoot":""}